;;;---------------------------------------------------------------------------------------------------
;;; Project Euler 2: Even Fibonacci Numbers
;;;---------------------------------------------------------------------------------------------------

#lang racket/base

(require "../lib/tools.rkt")

(provide test solve)


;;;---------------------------------------------------------------------------------------------------
;;; Solution
;;;---------------------------------------------------------------------------------------------------

(define (euler bound)
  (let ((seq-gen (make-sequence-gen (\lambda (a0 a1) (+ (* 4 a1) a0)) 2 8)))
    (let loop ((t (seq-gen)) (acc 0))
      (if (<= t bound) (loop (seq-gen) (+ acc t)) acc))))


;;;---------------------------------------------------------------------------------------------------
;;; Runme interface
;;;---------------------------------------------------------------------------------------------------

(define (test) (= 44 (euler 100)))
(define (solve) (euler 4000000))
