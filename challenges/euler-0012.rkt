;;;---------------------------------------------------------------------------------------------------
;;; Project Euler 12: Highly Divisible Triangular Number
;;;---------------------------------------------------------------------------------------------------

#lang racket/base

(provide test solve)

(require math/number-theory)


;;;---------------------------------------------------------------------------------------------------
;;; Solution
;;;---------------------------------------------------------------------------------------------------

(define (nbr-divisors n)
  (foldl (Î» (e acc) (* acc (add1 (cadr e)))) 1 (factorize n)))
         
(define (euler nbr-divisors-bound)
  (let loop ([i 2]
             [n 1])
    (if (< nbr-divisors-bound (nbr-divisors n))
        n
        (loop (add1 i) (+ n i)))))


;;;---------------------------------------------------------------------------------------------------
;;; Runme interface
;;;---------------------------------------------------------------------------------------------------

(define (test) (= 28 (euler 5)))
(define (solve) (euler 500))